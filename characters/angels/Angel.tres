[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://da54u06ubggor"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e4djx"]
input_name = "color"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_pypsy"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_vpqm8"]
parameter_name = "hitflash"
default_value_enabled = true
default_value = Color(1, 1, 0.298039, 0.560784)

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_hih3f"]
parameter_name = "enabled"
default_value_enabled = true

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool enabled = false;
uniform vec4 hitflash : source_color = vec4(1.000000, 1.000000, 0.298039, 0.560784);



void fragment() {
// BooleanParameter:5
	bool n_out5p0 = enabled;


// ColorParameter:4
	vec4 n_out4p0 = hitflash;


// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00001;
	if(abs((n_out5p0 ? 1.0 : 0.0) - n_in3p1) < n_in3p2)
	{
		n_out3p0 = vec3(n_out4p0.xyz);
	}
	else if((n_out5p0 ? 1.0 : 0.0) < n_in3p1)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
graph_offset = Vector2(-125.992, -40.6233)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(820, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_e4djx")
nodes/fragment/2/position = Vector2(-100, 400)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_pypsy")
nodes/fragment/3/position = Vector2(440, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_vpqm8")
nodes/fragment/4/position = Vector2(-80, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeBooleanParameter_hih3f")
nodes/fragment/5/position = Vector2(-80, 40)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 0, 3, 4, 2, 0, 3, 5, 4, 0, 3, 3, 5, 0, 3, 0)
