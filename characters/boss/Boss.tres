[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://dc78tc8pv70f3"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_ovoex"]
parameter_name = "BooleanParameter"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_wd0sy"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n2as7"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8e5yw"]
parameter_name = "ColorParameter"
default_value_enabled = true

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool BooleanParameter;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// BooleanParameter:2
	bool n_out2p0 = BooleanParameter;


// ColorParameter:5
	vec4 n_out5p0 = ColorParameter;


// Input:4
	vec4 n_out4p0 = COLOR;


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00001;
	if(abs((n_out2p0 ? 1.0 : 0.0) - n_in3p1) < n_in3p2)
	{
		n_out3p0 = vec3(n_out5p0.xyz);
	}
	else if((n_out2p0 ? 1.0 : 0.0) < n_in3p1)
	{
		n_out3p0 = vec3(n_out4p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out4p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
graph_offset = Vector2(-147.882, -16.1162)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(700, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeBooleanParameter_ovoex")
nodes/fragment/2/position = Vector2(20, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_wd0sy")
nodes/fragment/3/position = Vector2(371.788, 149.035)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_n2as7")
nodes/fragment/4/position = Vector2(-100, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_8e5yw")
nodes/fragment/5/position = Vector2(-20, 400)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 4, 4, 0, 3, 5, 3, 0, 0, 0, 5, 0, 3, 3)
